mongo:
  aktoMongoConn: ""

kubernetesClusterDomain: cluster.local
runtime:
  aktoApiSecurityRuntime:
    env:
      aktoAccountName: Helios
      aktoConfigName: staging
      aktoInstanceType: DASHBOARD
      aktoKafkaBrokerMal: localhost:29092
      aktoKafkaBrokerUrl: 127.0.0.1:29092
      aktoKafkaGroupIdConfig: asdf
      aktoKafkaMaxPollRecordsConfig: "100"
      aktoKafkaTopicName: akto.api.logs
      aktoTrafficBatchSize: "100"
      aktoTrafficBatchTimeSecs: "10"
      puppeteerReplayServiceUrl: http://akto-puppeteer-replay:3000
      useHostName: true
      databaseAbstractorUrl: http://aktoxy-database-abstractor:9000
      databaseAbstractorToken: ""
      aktoLogLevel: DEBUG
      runtimeMode: normal
    image:
      repository: public.ecr.aws/aktosecurity/akto-api-security-runtime
      tag: latest
    imagePullPolicy: Always
    resources:
      requests:
        cpu: 2
        memory: "4Gi"
      limits:
        cpu: 3
        memory: "8Gi"
  kafka1:
    env:
      kafkaAdvertisedListeners: LISTENER_DOCKER_EXTERNAL_LOCALHOST://localhost:29092,
        LISTENER_DOCKER_EXTERNAL_DIFFHOST://akto-runtime.$(MY_POD_NAMESPACE).svc.cluster.local:9092
      kafkaBrokerId: "1"
      kafkaCleanupPolicy: delete
      kafkaCreateTopics: akto.api.logs:3:3
      kafkaInterBrokerListenerName: LISTENER_DOCKER_EXTERNAL_LOCALHOST
      kafkaListenerSecurityProtocolMap: CONTROLLER:PLAINTEXT,LISTENER_DOCKER_EXTERNAL_LOCALHOST:PLAINTEXT,LISTENER_DOCKER_EXTERNAL_DIFFHOST:PLAINTEXT
      kafkaProcessRoles: "broker,controller"
      kafkaNodeId: "1"
      kafkaControllerQuorumVoters: "1@localhost:9093"
      kafkaControllerListenerNames: "CONTROLLER"
      kafkaListeners: "CONTROLLER://0.0.0.0:9093,LISTENER_DOCKER_EXTERNAL_LOCALHOST://0.0.0.0:29092,LISTENER_DOCKER_EXTERNAL_DIFFHOST://0.0.0.0:9092"
      kafkaLogCleanerEnable: "true"
      kafkaLogRetentionBytes: "10737418240"
      kafkaLogRetentionCheckIntervalMs: "60000"
      kafkaLogRetentionHours: "5"
      kafkaLogSegmentBytes: "104857600"
      kafkaOffsetsTopicReplicationFactor: "1"
      kafkaTransactionStateLogMinIsr: "1"
      kafkaTransactionStateLogReplicationFactor: "1"
      kafkaClusterId: "c6a1b8e2-4f2a-4b2a-9c3f-1a2b3c4d5e6f"
    image:
      repository: confluentinc/cp-kafka
      tag: 8.1.0
    resources:
      requests:
        cpu: 1
        memory: "4Gi"
      limits:
        cpu: 2
        memory: "8Gi"
  ports:
  - port: 9092
    targetPort: 9092
  replicas: 1
  type: ClusterIP

keel:
  keel:
    env:
      awsAccessKeyId: ""
      awsRegion: ""
      awsSecretAccessKey: ""
      hipchatApprovalsBotName: ""
      hipchatApprovalsChannel: ""
      hipchatApprovalsPasswort: ""
      hipchatApprovalsUserName: ""
      hipchatChannels: ""
      hipchatToken: ""
      insecureRegistry: "true"
      mattermostEndpoint: ""
      notificationLevel: info
      webhookEndpoint: ""
    image:
      repository: keelhq/keel
      tag: latest
    imagePullPolicy: Always
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 50m
        memory: 64Mi
  maxUnavailable: 1
  ports:
  - name: keel
    port: 9300
    protocol: TCP
    targetPort: 9300
  replicas: 1
  serviceAccount:
    annotations: {}
  type: LoadBalancer

threat_client:
  aktoApiSecurityThreatClient:
    env:
      enabled: false
      aggregationRulesEnabled: false
      postgresUrl: jdbc:postgresql://postgres.default.svc.cluster.local:5432/akto
      postgresUser: akto
      postgresPassword: akto
      aktoAccountName: Helios
      aktoConfigName: staging
      aktoInstanceType: DASHBOARD
      aktoKafkaTrafficBrokerUrl: akto-runtime-runtime.default.svc.cluster.local:9092
      aktoKafkaBrokerUrl: akto-runtime-runtime.default.svc.cluster.local:9092
      backendUrl: http://localhost:9090
      aktoLogLevel: DEBUG
      useHostName: true
    image:
      repository: aktosecurity/akto-threat-detection
      tag: latest
    imagePullPolicy: Always
    resources:
      requests:
        cpu: 1
        memory: "1Gi"
      limits:
        cpu: 2
        memory: "2Gi"
  
  aktoApiSecurityThreatBackend:
    env:
      kafkaBrokerUrl: akto-runtime-runtime.default.svc.cluster.local:9092
      aktoLogLevel: DEBUG
    image:
      repository: aktosecurity/akto-threat-detection-backend
      tag: latest
    imagePullPolicy: Always
    resources:
      requests:
        cpu: 1
        memory: "1Gi"
      limits:
        cpu: 2
        memory: "2Gi"
  ports:
  - port: 9090
    targetPort: 9090
  replicas: 1
  type: ClusterIP

redis:
  image:
    repository: redis
    tag: "7.0"
    pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: "500m"
      memory: "500Mi"
    limits:
      cpu: "900m"
      memory: "1500Mi"
  persistence:
    enabled: true
    size: "2Gi"
    storageClass: ""